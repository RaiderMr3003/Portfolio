---
import { Image } from "astro:assets";
import raider_photo from '../../assets/raidermr_photo.webp';
import { Github, Linkedin, Languages, Menu, X } from 'lucide-astro';

const currentPath = Astro.url.pathname;
const isSpanish = currentPath.startsWith("../");

const toggleLanguage = isSpanish ? currentPath.replace("../", "") : `/`;
//las imagenes se agregan en el formato src={background.src}, donde background es el nombre de la imagen 
// y src es el nombre del archivo de la imagen
---

<header class="fixed top-0 left-0 w-full backdrop-blur-md bg-black/50 shadow-md z-50 transition-all duration-300">
	<div class="flex justify-between items-center py-4 px-8 max-w-[1120px] mx-auto">
		<Image 
			class="rounded-full w-10 h-10"
			src={raider_photo}
			alt="raidermr"
			loading="eager"
		/>

		<h2 class="font-fcb md:hidden text-white">
			RaiderMr | Portfolio
		</h2>
		
		<button id="menu-btn" class="lg:hidden text-white hover:text-[#EDBB00] transition-colors cursor-pointer">
			<Menu size={30} />
		</button>

		<nav class="font-fcb flex flex-row gap-x-15 opacity-80 hidden lg:flex">
			<a href="#Experience" class="text-white hover:text-[#EDBB00] transition-colors">Experiencia</a>
			<a href="#Projects" class="text-white hover:text-[#EDBB00] transition-colors">Proyectos</a>
			<a href="#Skills" class="text-white hover:text-[#EDBB00] transition-colors">Habilidades</a>			
			<a href="#About" class="text-white hover:text-[#EDBB00] transition-colors">Sobre Mi</a>
			<a href="mailto:raidermr3003gean@gmail.com" target="_blank" rel="icono de lenguages" role="link" class="text-white hover:text-[#EDBB00] transition-colors">Contacto</a>
		</nav>

		<div class="flex gap-4 hidden lg:flex">
			<a 
				href="https://github.com/RaiderMr3003" 
				target="_blank" 
				rel="icono-github"
				class="text-white hover:text-[#EDBB00] transition-colors"
				aria-label="GitHub"
			>
				<Github size={20} />
			</a>
		
			<a 
				href="https://linkedin.com/in/mrgean3003/" 
				target="_blank" 
				rel="icono-linkedin"
				class="text-white hover:text-[#EDBB00] transition-colors"
				aria-label="LinkedIn"
			>
				<Linkedin size={20} />
			</a>

			<div class="relative">
				<button id="language-btn" class="text-white hover:text-[#EDBB00] transition-colors flex items-center cursor-pointer">
					<Languages size={20} />
					<span class="ml-2">{isSpanish ? "English" : "Español"}</span>
				</button>
			
				<ul id="language-menu" class="absolute left-0 mt-2 w-32 bg-black text-white border border-[#EDBB00] rounded-md opacity-0 invisible transition-all z-50">
					<li>
						<a href="/" class="block px-4 py-2 hover:bg-[#EDBB00] hover:text-black" aria-label="Switch to English version">English</a>
					</li>
					<li>
						<a href="/es" class="block px-4 py-2 hover:bg-[#EDBB00] hover:text-black" aria-label="Cambiar a la versión en español">Español</a>
					</li>
				</ul>
			</div>
		</div>
	</div>

	<div id="mobile-menu" class="fixed top-0 left-0 w-full h-screen bg-black/90 flex flex-col items-center justify-center gap-6 text-white transition-transform duration-300 -translate-x-full">
		<button id="close-btn" class="absolute top-6 right-8 text-white hover:text-[#EDBB00] cursor-pointer">
			<X size={30} />
		</button>
		<a href="#Experience" class="hover:text-[#EDBB00] transition-colors text-lg">Experiencia</a>
		<a href="#Projects" class="hover:text-[#EDBB00] transition-colors text-lg">Proyectos</a>
		<a href="#Skills" class="hover:text-[#EDBB00] transition-colors text-lg">Habilidades</a>
		<a href="#About" class="hover:text-[#EDBB00] transition-colors text-lg">Sobre Mi</a>
		<a href="mailto:raidermr3003gean@gmail.com" class="hover:text-[#EDBB00] transition-colors text-lg">Contacto</a>

		{/* Iconos en móviles */}
		<div class="flex gap-6">
			<a href="https://github.com/RaiderMr3003" target="_blank" rel="icono-github" class="hover:text-[#EDBB00] transition-colors">
				<Github size={30} />
			</a>
			<a href="https://linkedin.com/in/mrgean3003/" target="_blank" rel="icono-linkedin" class="hover:text-[#EDBB00] transition-colors">
				<Linkedin size={30} />
			</a>
			<div class="relative">
				<button id="mobile-language-btn" class="text-white hover:text-[#EDBB00] transition-colors flex items-center border border-[#EDBB00] px-3 py-1 rounded-md cursor-pointer">
					<Languages size={20} />
					<span class="ml-2">{isSpanish ? "English" : "Español"}</span>
				</button>
		
				<ul id="mobile-language-menu" class="absolute left-0 mt-2 w-32 bg-black text-white border border-[#EDBB00] rounded-md opacity-0 invisible transition-all z-50">
					<li>
						<a href="/" class="block px-4 py-2 hover:bg-[#EDBB00] hover:text-black" aria-label="Switch to English version">English</a>
					</li>
					<li>
						<a href="/es" class="block px-4 py-2 hover:bg-[#EDBB00] hover:text-black" aria-label="Cambiar a la versión en español">Español</a>
					</li>
				</ul>
			</div>
		</div>
	</div>
	<div class="absolute bottom-0 left-0 w-full h-[4px] bg-gradient-to-r from-[#A50044] to-[#004D98] drop-shadow-lg"></div>
	<div class="absolute bottom-0 left-0 w-full h-[4px] bg-gradient-to-r from-[#A50044] to-[#004D98] blur-md opacity-90"></div>
	<div class="absolute bottom-0 left-0 w-full h-[6px] bg-gradient-to-r from-[#A50044] via-white to-[#004D98] blur-lg opacity-70"></div>
</header>
<script defer>
	window.onload = () => {
	const menuBtn = document.getElementById('menu-btn');
	const closeBtn = document.getElementById('close-btn');
	const mobileMenu = document.getElementById('mobile-menu');
	const languageBtn = document.getElementById('language-btn');
	const languageMenu = document.getElementById('language-menu');

	if (menuBtn && closeBtn && mobileMenu) {
		menuBtn.addEventListener('click', () => {
			mobileMenu.classList.remove('-translate-x-full');
		});

		closeBtn.addEventListener('click', () => {
			mobileMenu.classList.add('-translate-x-full');
		});
	}

	// Mostrar/Ocultar menú de idioma al hacer clic
	if (languageBtn && languageMenu) {
		languageBtn.addEventListener('click', (e) => {
			e.stopPropagation(); // Evita que el evento cierre el menú inmediatamente
			const isOpen = languageMenu.classList.contains('opacity-100');
			languageMenu.classList.toggle('opacity-100', !isOpen);
			languageMenu.classList.toggle('visible', !isOpen);
			languageMenu.classList.toggle('opacity-0', isOpen);
			languageMenu.classList.toggle('invisible', isOpen);
		});

		// Cerrar el menú si se hace clic fuera
		document.addEventListener('click', (e) => {
			if (!languageMenu.contains(e.target) && !languageBtn.contains(e.target)) {
				languageMenu.classList.add('opacity-0', 'invisible');
				languageMenu.classList.remove('opacity-100', 'visible');
			}
		});
	}

	const mobileLanguageBtn = document.getElementById('mobile-language-btn');
        const mobileLanguageMenu = document.getElementById('mobile-language-menu');

        mobileLanguageBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            mobileLanguageMenu.classList.toggle('opacity-100');
            mobileLanguageMenu.classList.toggle('visible');
            mobileLanguageMenu.classList.toggle('opacity-0');
            mobileLanguageMenu.classList.toggle('invisible');
        });

        // Cierra el menú si se hace clic fuera de él
        document.addEventListener('click', (e) => {
            if (!mobileLanguageBtn.contains(e.target) && !mobileLanguageMenu.contains(e.target)) {
                mobileLanguageMenu.classList.add('opacity-0', 'invisible');
                mobileLanguageMenu.classList.remove('opacity-100', 'visible');
            }
        });
};
</script>